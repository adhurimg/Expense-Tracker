{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/context/globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:3000/api/v1/\"; // Assuming the backend API is running on port 3000\n\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Calculate incomes\n  const addIncome = async income => {\n    try {\n      const response = await axios.post(`${BASE_URL}add-income`, income);\n      getIncomes();\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-incomes`);\n      setIncomes(response.data);\n      console.log(response.data);\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  const deleteIncome = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-income/${id}`);\n      getIncomes();\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n\n  // Calculate expenses\n  const addExpense = async expense => {\n    try {\n      const response = await axios.post(`${BASE_URL}add-expense`, expense);\n      getExpenses();\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  const getExpenses = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-expenses`);\n      setExpenses(response.data);\n      console.log(response.data);\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  const deleteExpense = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-expense/${id}`);\n      getExpenses();\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  const totalExpenses = () => {\n    let totalExpenses = 0;\n    expenses.forEach(expense => {\n      totalExpenses = totalExpenses + expense.amount;\n    });\n    return totalExpenses;\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","_ref","_s","children","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","response","post","getIncomes","data","message","get","console","log","deleteIncome","id","delete","totalIncome","forEach","amount","addExpense","expense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport axios from 'axios';\n\nconst BASE_URL = \"http://localhost:3000/api/v1/\"; // Assuming the backend API is running on port 3000\n\nconst GlobalContext = React.createContext();\n\nexport const GlobalProvider = ({ children }) => {\n    const [incomes, setIncomes] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [error, setError] = useState(null);\n\n    // Calculate incomes\n    const addIncome = async (income) => {\n        try {\n            const response = await axios.post(`${BASE_URL}add-income`, income);\n            getIncomes();\n        } catch (error) {\n            setError(error.response.data.message);\n        }\n    };\n\n    const getIncomes = async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}get-incomes`);\n            setIncomes(response.data);\n            console.log(response.data);\n        } catch (error) {\n            setError(error.response.data.message);\n        }\n    };\n\n    const deleteIncome = async (id) => {\n        try {\n            await axios.delete(`${BASE_URL}delete-income/${id}`);\n            getIncomes();\n        } catch (error) {\n            setError(error.response.data.message);\n        }\n    };\n\n    const totalIncome = () => {\n        let totalIncome = 0;\n        incomes.forEach((income) => {\n            totalIncome = totalIncome + income.amount;\n        });\n\n        return totalIncome;\n    };\n\n    // Calculate expenses\n    const addExpense = async (expense) => {\n        try {\n            const response = await axios.post(`${BASE_URL}add-expense`, expense);\n            getExpenses();\n        } catch (error) {\n            setError(error.response.data.message);\n        }\n    };\n\n    const getExpenses = async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}get-expenses`);\n            setExpenses(response.data);\n            console.log(response.data);\n        } catch (error) {\n            setError(error.response.data.message);\n        }\n    };\n\n    const deleteExpense = async (id) => {\n        try {\n            await axios.delete(`${BASE_URL}delete-expense/${id}`);\n            getExpenses();\n        } catch (error) {\n            setError(error.response.data.message);\n        }\n    };\n\n    const totalExpenses = () => {\n        let totalExpenses = 0;\n        expenses.forEach((expense) => {\n            totalExpenses = totalExpenses + expense.amount;\n        });\n\n        return totalExpenses;\n    };\n\n    const totalBalance = () => {\n        return totalIncome() - totalExpenses();\n    };\n\n    const transactionHistory = () => {\n        const history = [...incomes, ...expenses];\n        history.sort((a, b) => {\n            return new Date(b.createdAt) - new Date(a.createdAt);\n        });\n\n        return history.slice(0, 3);\n    };\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                addIncome,\n                getIncomes,\n                incomes,\n                deleteIncome,\n                expenses,\n                totalIncome,\n                addExpense,\n                getExpenses,\n                deleteExpense,\n                totalExpenses,\n                totalBalance,\n                transactionHistory,\n                error,\n                setError\n            }}\n        >\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const useGlobalContext = () => {\n    return useContext(GlobalContext);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}