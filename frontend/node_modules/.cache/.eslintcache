[{"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/index.js":"1","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/App.js":"2","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/styles/GlobalStyles.js":"3","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/context/globalContext.js":"4","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/styles/Layouts.js":"5","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Navigation/Navigation.js":"6","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/utils/Icons.js":"7","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/utils/menuItems.js":"8","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Orb/Orb.js":"9","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Dashboard/Dashboard.js":"10","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Income/Income.js":"11","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/utils/useWindowSize.js":"12","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/History/History.js":"13","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Chart/Chart.js":"14","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Form/Form.js":"15","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/IncomeItem/IncomeItem.js":"16","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/utils/dateFormat.js":"17","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Button/Button.js":"18","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Expenses/Expenses.js":"19","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Expenses/ExpenseForm.js":"20"},{"size":409,"mtime":1683290321972,"results":"21","hashOfConfig":"22"},{"size":1573,"mtime":1686176418655,"results":"23","hashOfConfig":"22"},{"size":1251,"mtime":1682607033797,"results":"24","hashOfConfig":"22"},{"size":2836,"mtime":1685746929248,"results":"25","hashOfConfig":"22"},{"size":238,"mtime":1683294210349,"results":"26","hashOfConfig":"22"},{"size":2973,"mtime":1686609664686,"results":"27","hashOfConfig":"22"},{"size":1890,"mtime":1682802528478,"results":"28","hashOfConfig":"22"},{"size":647,"mtime":1686695745408,"results":"29","hashOfConfig":"22"},{"size":914,"mtime":1683291755441,"results":"30","hashOfConfig":"22"},{"size":5120,"mtime":1683290923156,"results":"31","hashOfConfig":"22"},{"size":2399,"mtime":1683291646284,"results":"32","hashOfConfig":"22"},{"size":495,"mtime":1682804063388,"results":"33","hashOfConfig":"22"},{"size":1573,"mtime":1683291904373,"results":"34","hashOfConfig":"22"},{"size":1769,"mtime":1683290776265,"results":"35","hashOfConfig":"22"},{"size":4628,"mtime":1683291448210,"results":"36","hashOfConfig":"22"},{"size":4849,"mtime":1683291685945,"results":"37","hashOfConfig":"22"},{"size":114,"mtime":1682802613703,"results":"38","hashOfConfig":"22"},{"size":655,"mtime":1683290018574,"results":"39","hashOfConfig":"22"},{"size":2514,"mtime":1683291116350,"results":"40","hashOfConfig":"22"},{"size":4669,"mtime":1683291362948,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"zxo6f1",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"45"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"45"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/index.js",[],[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/App.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/styles/GlobalStyles.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/context/globalContext.js",["107","108","109","110"],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/styles/Layouts.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Navigation/Navigation.js",["111","112"],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/utils/Icons.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/utils/menuItems.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Orb/Orb.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Dashboard/Dashboard.js",["113"],[],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext';\nimport History from '../../History/History';\nimport { InnerLayout } from '../../styles/Layouts';\nimport { dollar } from '../../utils/Icons';\nimport Chart from '../Chart/Chart';\n\nfunction Dashboard() {\n    const {totalExpenses,incomes, expenses, totalIncome, totalBalance, getIncomes, getExpenses } = useGlobalContext()\n\n    useEffect(() => {\n        getIncomes()\n        getExpenses()\n    }, [])\n\n    return (\n        <DashboardStyled>\n            <InnerLayout>\n                <h1>All Transactions</h1>\n                <div className=\"stats-con\">\n                    <div className=\"chart-con\">\n                        <Chart />\n                        <div className=\"amount-con\">\n                            <div className=\"income\">\n                                <h2>Total Income</h2>\n                                <p>\n                                    {dollar} {totalIncome()}\n                                </p>\n                            </div>\n                            <div className=\"expense\">\n                                <h2>Total Expense</h2>\n                                <p>\n                                    {dollar} {totalExpenses()}\n                                </p>\n                            </div>\n                            <div className=\"balance\">\n                                <h2>Total Balance</h2>\n                                <p>\n                                    {dollar} {totalBalance()}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"history-con\">\n                        <History />\n                        <h2 className=\"salary-title\">Min <span>Salary</span>Max</h2>\n                        <div className=\"salary-item\">\n                            <p>\n                                ${Math.min(...incomes.map(item => item.amount))}\n                            </p>\n                            <p>\n                                ${Math.max(...incomes.map(item => item.amount))}\n                            </p>\n                        </div>\n                        <h2 className=\"salary-title\">Min <span>Expense</span>Max</h2>\n                        <div className=\"salary-item\">\n                            <p>\n                                ${Math.min(...expenses.map(item => item.amount))}\n                            </p>\n                            <p>\n                                ${Math.max(...expenses.map(item => item.amount))}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </InnerLayout>\n        </DashboardStyled>\n    )\n}\n\nconst DashboardStyled = styled.div`\n    .stats-con{\n        display: grid;\n        grid-template-columns: repeat(5, 1fr);\n        gap: 2rem;\n        .chart-con{\n            grid-column: 1 / 4;\n            height: 400px;\n            .amount-con{\n                display: grid;\n                grid-template-columns: repeat(4, 1fr);\n                gap: 2rem;\n                margin-top: 2rem;\n                .income, .expense{\n                    grid-column: span 2;\n                }\n                .income, .expense, .balance{\n                    background: #FCF6F9;\n                    border: 2px solid #FFFFFF;\n                    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n                    border-radius: 20px;\n                    padding: 1rem;\n                    p{\n                        font-size: 3.5rem;\n                        font-weight: 700;\n                    }\n                }\n\n                .balance{\n                    grid-column: 2 / 4;\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: center;\n                    align-items: center;\n                    p{\n                        color: var(--color-green);\n                        opacity: 0.6;\n                        font-size: 4.5rem;\n                    }\n                }\n            }\n        }\n\n        .history-con{\n            grid-column: 4 / -1;\n            h2{\n                margin: 1rem 0;\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n            }\n            .salary-title{\n                font-size: 1.2rem;\n                span{\n                    font-size: 1.8rem;\n                }\n            }\n            .salary-item{\n                background: #FCF6F9;\n                border: 2px solid #FFFFFF;\n                box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n                padding: 1rem;\n                border-radius: 20px;\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                p{\n                    font-weight: 600;\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n`;\n\nexport default Dashboard\n","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Income/Income.js",["114","115"],[],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext';\nimport { InnerLayout } from '../../styles/Layouts';\nimport Form from '../Form/Form';\nimport IncomeItem from '../IncomeItem/IncomeItem';\n\nfunction Income() {\n    const {addIncome,incomes, getIncomes, deleteIncome, totalIncome} = useGlobalContext()\n\n    useEffect(() =>{\n        getIncomes()\n    }, [])\n    return (\n        <IncomeStyled>\n            <InnerLayout>\n                <h1>Incomes</h1>\n                <h2 className=\"total-income\">Total Income: <span>${totalIncome()}</span></h2>\n                <div className=\"income-content\">\n                    <div className=\"form-container\">\n                        <Form />\n                    </div>\n                    <div className=\"incomes\">\n                        {incomes.map((income) => {\n                            const {_id, title, amount, date, category, description, type} = income;\n                            return <IncomeItem\n                                key={_id}\n                                id={_id}\n                                title={title}\n                                description={description}\n                                amount={amount}\n                                date={date}\n                                type={type}\n                                category={category}\n                                indicatorColor=\"var(--color-green)\"\n                                deleteItem={deleteIncome}\n                            />\n                        })}\n                    </div>\n                </div>\n            </InnerLayout>\n        </IncomeStyled>\n    )\n}\n\nconst IncomeStyled = styled.div`\n    display: flex;\n    overflow: auto;\n    .total-income{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: #FCF6F9;\n        border: 2px solid #FFFFFF;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        border-radius: 20px;\n        padding: 1rem;\n        margin: 1rem 0;\n        font-size: 2rem;\n        gap: .5rem;\n        span{\n            font-size: 2.5rem;\n            font-weight: 800;\n            color: var(--color-green);\n        }\n    }\n    .income-content{\n        display: flex;\n        gap: 2rem;\n        .incomes{\n            flex: 1;\n        }\n    }\n`;\n\nexport default Income\n","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/utils/useWindowSize.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/History/History.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Chart/Chart.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Form/Form.js",["116"],[],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useGlobalContext } from '../../context/globalContext';\nimport Button from '../Button/Button';\nimport { plus } from '../../utils/Icons';\n\n\nfunction Form() {\n    const {addIncome, getIncomes, error, setError} = useGlobalContext()\n    const [inputState, setInputState] = useState({\n        title: '',\n        amount: '',\n        date: '',\n        category: '',\n        description: '',\n    })\n\n    const { title, amount, date, category,description } = inputState;\n\n    const handleInput = name => e => {\n        setInputState({...inputState, [name]: e.target.value})\n        setError('')\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        addIncome(inputState)\n        setInputState({\n            title: '',\n            amount: '',\n            date: '',\n            category: '',\n            description: '',\n        })\n    }\n\n    return (\n        <FormStyled onSubmit={handleSubmit}>\n            {error && <p className='error'>{error}</p>}\n            <div className=\"input-control\">\n                <input\n                    type=\"text\"\n                    value={title}\n                    name={'title'}\n                    placeholder=\"Salary Title\"\n                    onChange={handleInput('title')}\n                />\n            </div>\n            <div className=\"input-control\">\n                <input value={amount}\n                       type=\"text\"\n                       name={'amount'}\n                       placeholder={'Salary Amount'}\n                       onChange={handleInput('amount')}\n                />\n            </div>\n            <div className=\"input-control\">\n                <DatePicker\n                    id='date'\n                    placeholderText='Enter A Date'\n                    selected={date}\n                    dateFormat=\"dd/MM/yyyy\"\n                    onChange={(date) => {\n                        setInputState({...inputState, date: date})\n                    }}\n                />\n            </div>\n            <div className=\"selects input-control\">\n                <select required value={category} name=\"category\" id=\"category\" onChange={handleInput('category')}>\n                    <option value=\"\"  disabled >Select Option</option>\n                    <option value=\"salary\">Salary</option>\n                    <option value=\"freelancing\">Freelancing</option>\n                    <option value=\"investments\">Investiments</option>\n                    <option value=\"stocks\">Stocks</option>\n                    <option value=\"bitcoin\">Bitcoin</option>\n                    <option value=\"bank\">Bank Transfer</option>\n                    <option value=\"youtube\">Youtube</option>\n                    <option value=\"other\">Other</option>\n                </select>\n            </div>\n            <div className=\"input-control\">\n                <textarea name=\"description\" value={description} placeholder='Add A Reference' id=\"description\" cols=\"30\" rows=\"4\" onChange={handleInput('description')}></textarea>\n            </div>\n            <div className=\"submit-btn\">\n                <Button\n                    name={'Add Income'}\n                    icon={plus}\n                    bPad={'.8rem 1.6rem'}\n                    bRad={'30px'}\n                    bg={'var(--color-accent'}\n                    color={'#fff'}\n                />\n            </div>\n        </FormStyled>\n    )\n}\n\n\nconst FormStyled = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    input, textarea, select{\n        font-family: inherit;\n        font-size: inherit;\n        outline: none;\n        border: none;\n        padding: .5rem 1rem;\n        border-radius: 5px;\n        border: 2px solid #fff;\n        background: transparent;\n        resize: none;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        color: rgba(34, 34, 96, 0.9);\n        &::placeholder{\n            color: rgba(34, 34, 96, 0.4);\n        }\n    }\n    .input-control{\n        input{\n            width: 100%;\n        }\n    }\n\n    .selects{\n        display: flex;\n        justify-content: flex-end;\n        select{\n            color: rgba(34, 34, 96, 0.4);\n            &:focus, &:active{\n                color: rgba(34, 34, 96, 1);\n            }\n        }\n    }\n\n    .submit-btn{\n        button{\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n            &:hover{\n                background: var(--color-green) !important;\n            }\n        }\n    }\n`;\nexport default Form\n","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/IncomeItem/IncomeItem.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/utils/dateFormat.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Button/Button.js",[],[],"/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Expenses/Expenses.js",["117","118","119"],[],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext';\nimport { InnerLayout } from '../../styles/Layouts';\nimport Form from '../Form/Form';\nimport IncomeItem from '../IncomeItem/IncomeItem';\nimport ExpenseForm from './ExpenseForm';\n\nfunction Expenses() {\n    const {addIncome,expenses, getExpenses, deleteExpense, totalExpenses} = useGlobalContext()\n\n    useEffect(() =>{\n        getExpenses()\n    }, [])\n    return (\n        <ExpenseStyled>\n            <InnerLayout>\n                <h1>Expenses</h1>\n                <h2 className=\"total-income\">Total Expense: <span>${totalExpenses()}</span></h2>\n                <div className=\"income-content\">\n                    <div className=\"form-container\">\n                        <ExpenseForm />\n                    </div>\n                    <div className=\"incomes\">\n                        {expenses.map((income) => {\n                            const {_id, title, amount, date, category, description, type} = income;\n                            console.log(income)\n                            return <IncomeItem\n                                key={_id}\n                                id={_id}\n                                title={title}\n                                description={description}\n                                amount={amount}\n                                date={date}\n                                type={type}\n                                category={category}\n                                indicatorColor=\"var(--color-green)\"\n                                deleteItem={deleteExpense}\n                            />\n                        })}\n                    </div>\n                </div>\n            </InnerLayout>\n        </ExpenseStyled>\n    )\n}\n\nconst ExpenseStyled = styled.div`\n    display: flex;\n    overflow: auto;\n    .total-income{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: #FCF6F9;\n        border: 2px solid #FFFFFF;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        border-radius: 20px;\n        padding: 1rem;\n        margin: 1rem 0;\n        font-size: 2rem;\n        gap: .5rem;\n        span{\n            font-size: 2.5rem;\n            font-weight: 800;\n            color: var(--color-green);\n        }\n    }\n    .income-content{\n        display: flex;\n        gap: 2rem;\n        .incomes{\n            flex: 1;\n        }\n    }\n`;\n\nexport default Expenses\n","/Applications/MAMP/htdocs/Expense-Tracker/frontend/src/Components/Expenses/ExpenseForm.js",[],[],{"ruleId":"120","severity":1,"message":"121","line":18,"column":15,"nodeType":"122","messageId":"123","endLine":18,"endColumn":23},{"ruleId":"120","severity":1,"message":"124","line":32,"column":15,"nodeType":"122","messageId":"123","endLine":32,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":48,"column":15,"nodeType":"122","messageId":"123","endLine":48,"endColumn":23},{"ruleId":"120","severity":1,"message":"124","line":62,"column":15,"nodeType":"122","messageId":"123","endLine":62,"endColumn":18},{"ruleId":"120","severity":1,"message":"125","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"126","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":15,"column":8,"nodeType":"129","endLine":15,"endColumn":10,"suggestions":"130"},{"ruleId":"120","severity":1,"message":"131","line":9,"column":12,"nodeType":"122","messageId":"123","endLine":9,"endColumn":21},{"ruleId":"127","severity":1,"message":"132","line":13,"column":8,"nodeType":"129","endLine":13,"endColumn":10,"suggestions":"133"},{"ruleId":"120","severity":1,"message":"134","line":11,"column":23,"nodeType":"122","messageId":"123","endLine":11,"endColumn":33},{"ruleId":"120","severity":1,"message":"135","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":12},{"ruleId":"120","severity":1,"message":"131","line":10,"column":12,"nodeType":"122","messageId":"123","endLine":10,"endColumn":21},{"ruleId":"127","severity":1,"message":"136","line":14,"column":8,"nodeType":"129","endLine":14,"endColumn":10,"suggestions":"137"},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","'useState' is defined but never used.","'signout' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExpenses' and 'getIncomes'. Either include them or remove the dependency array.","ArrayExpression",["138"],"'addIncome' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getIncomes'. Either include it or remove the dependency array.",["139"],"'getIncomes' is assigned a value but never used.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'getExpenses'. Either include it or remove the dependency array.",["140"],{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [getExpenses, getIncomes]",{"range":"147","text":"148"},"Update the dependencies array to be: [getIncomes]",{"range":"149","text":"150"},"Update the dependencies array to be: [getExpenses]",{"range":"151","text":"152"},[536,538],"[getExpenses, getIncomes]",[441,443],"[getIncomes]",[490,492],"[getExpenses]"]